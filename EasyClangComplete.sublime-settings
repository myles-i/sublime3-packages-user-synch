{
  // SETTINGS FOR EASY_CLANG_COMPLETE.

  // Every path variable in settings can contain wildcards (without the ""):
  //  - "$project_base_path"  <-- replaced by the full path to the project to
  //                              which the currently opened view belongs.
  //  - "$project_name"       <-- replaced by the name of the current project.
  //  - "$clang_version"      <-- replaced by the numeric version of used clang.
  //  - "~"                   <-- replaced by the path to user home directory.
  //  - "*"                   <-- when put at the end of folder path expands to
  //                              all folders in that folder. Not recursive.
  //
  //  In addition to these, you can use your environment variables:
  //  - OSX and Linux:  $variable_name or ${variable_name}
  //  - Windows:        $variable_name or ${variable_name} or %variable_name%

  // Specify common flags that will be passed to clang for EVERY build.
  "common_flags" : [
    // include paths for Orion
    "-I$project_base_path/algorithm/kernel/*",
    "-I$project_base_path/algorithm/kernel/shared/*",
    // some example includes
    "-I/usr/include",
    "-I$project_base_path/src",
    // this is needed to include the correct headers for clang
    "-I/usr/lib/clang/$clang_version/include",
    ],  
  // Use libclang.
  // If set to false will use clang_binary and parse the output of
  // `clang_binary -Xclang -code-complete-at...` instead.
  // "use_libclang" : true,
  // Show additional information on hover over function call/variable etc.
  // This replaces default sublime on hover behaviour
  // "show_type_info": true,

  // pick the clang binary used by the plugin. This is used to determine the
  // version of the plugin and pick correct libclang bindings.
  "clang_binary" : "clang++",
    // hide the completions generated by other plugins
  "hide_default_completions": true,

  // ignore triggers and try to complete after each character
  // WARNING: can be very slow
  // "autocomplete_all" : false,
  // make plugin verbose
  "verbose" : true,
}